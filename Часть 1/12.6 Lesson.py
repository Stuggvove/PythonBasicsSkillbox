import math
import random

# Задача 1. Сумма чисел.

# Напишите функцию summa_n,
# которая принимает одно целое положительное число N 
# и выводит сумму всех чисел от 1 до N включительно.
# 
# Пример работы программы:
# Введите число: 5
# 
# Я знаю, что сумма чисел от 1 до 5 равна 15

def summa_n(n):
    summ1 = 0
    for i in range(n + 1):
        summ1 += i
    print(summ1)

summa_n(4)

# Задача 2. Функция в функции.

# Евгений проходит специальный тест по программированию.
# У него всё шло хорошо, пока он не наткнулся на тему “Функции”.
# 
# Задание звучит так:
# Основная ветка программы, не считая заголовков функций, состоит из одной строки кода.
# 
# Это вызов функции test().
# В ней запрашивается на ввод целое число.
# Если оно положительное, то вызывается функция positive(),
# тело которой содержит команду вывода на экран слова "Положительное".
# 
# Если число отрицательное, то вызывается функция negative(),
# ее тело содержит выражение вывода на экран слова "Отрицательное".
# 
# Помогите Евгению и реализуйте такую программ

def test():
    number = int(input('Введите число: '))
    if number > 0:
        positive()
    elif number < 0:
        negative()
    else:
        print('Ошибка ввода')
        test()

def positive():
    print('Положительное')
    test()

def negative():
    print('Отрицательное')
    test()

test()

# Задача 3. Апгрейд калькулятора.

# Степан использует калькулятор для расчёта суммы и разности чисел,
# но на работе ему требуются не только обычные арифметические действия. 
# Он ничего не хочет делать вручную, поэтому решил немного расширить
# функционал калькулятора.

# Напишите программу, запрашивающую у пользователя число и действие,
# которое нужно сделать с числом: вывести сумму его цифр,
# максимальную или минимальную цифру. 

#Каждое действие оформите в виде отдельной функции,
# а основную программу зациклите.

# Запрошенные числа должны передаваться в функции суммы,
# максимума и минимума при помощи аргументов.

def sum_number(number):
    sum = 0
    while number != 0:
        n = number % 10
        sum += n
        number //= 10
    print('Сумма цифр: ', sum)

def max_number(number):
    max_ = number % 10
    while number != 0:
        n = number % 10
        if n >= max_:
            max_ = n
        number //= 10
    print('Максимальная цифра: ', max_)

def min_number(number):
    min_ = number % 10
    while number != 0:
        n = number % 10
        if n <= min_:
            min_ = n
        number //= 10
    print('Минимальное число: ', min_)

while True:
    number = int(input('Введите число: '))
    sum_number(number)
    max_number(number)
    min_number(number)

# Задача 4. Число наоборот.

# Вводится последовательность чисел,
# которая оканчивается нулём.
#
# Реализуйте функцию,
# которая принимает в качестве аргумента каждое число,
# переворачивает его и выводит на экран.

# Пример:
# Введите число: 1234
# Число наоборот: 4321
# 
# Введите число: 1000
# Число наоборот: 0001
# 
# Введите число: 0
# Программа завершена!
# 
# Дополнительно: добейтесь такого вывода чисел, если в его начале идут нули.
# 
# Введите число: 1230
# Число наоборот: 321
# 
# Кстати, нули, которые мы убрали, называются ведущими.

def reverse_number(number):
    revers = 0
    while number > 0:
        num = number % 10
        number //= 10
        revers = revers * 10
        revers = revers + num
    print('Число наоборот: ', f'{revers}')

while True:
    number = int(input('Введите число: '))
    if number > 0:
        reverse_number(number)
    elif number == 0:
        print('Программа завершена!')
    else:
        number = int(input('Введите число: '))

# Задача 5. Текстовый редактор.

# Мы продолжаем разрабатывать новый текстовый редактор,
# и в этот раз нам поручили написать для него код,
# который считает количество любой буквы 
# и любой цифры в тексте (а не только буквы Ы как раньше).
# 
# Напишите функцию count_letters,
# которая принимает на вход текст и подсчитывает,
# какое в нём количество цифр K и букв N.
# 
# Функция должна вывести на экран информацию
# о найденных буквах и цифрах в определенном формате.
# 
# Пример:
# Введите текст: 100 лет в обед
# Какую цифру ищем? 0
# Какую букву ищём? л
# 
# Количество цифр 0: 2
# Количество букв л: 1

def count_letters():
    text = input('Введите текст: ')
    num_user = input('Какую цифру ищем? ')
    letter_user = input('Какую букву ищем? ')

    count_letter = 0
    count_num = 0

    for sym in text:
        if sym == letter_user:
            count_letter += 1
        if sym == num_user:
            count_num += 1
    print(f'Количество цифр {num_user}: {count_num}\nКоличество букв {letter_user}: {count_letter}')


count_letters()

# Задача 6. НОД.

#Напишите функцию, вычисляющую наибольший общий делитель двух чисел.

# math.gcd (a, b) - наибольший общий делитель
num1 = int(input('Введите первое число: '))
num2 = int(input('Введите второе число: '))
def nod(num1, num2):
    print(f'Наибольший общий делитель двух чисел= {math.gcd(num1, num2)}')

nod(num1, num2)

# Задача 7. Недоделка.

# Вы пришли на работу в контору по разработке игр,
# целевая аудитория которых - дети и их родители.
# 
# У прошлого программиста было задание
# сделать две игры в одном приложении, чтобы пользователь мог выбирать одну из них.
# 
# Однако программист, на место которого вы пришл
# и, перед увольнением не успел сделать эту задачу и оставил только небольшой шаблон проекта.
# 
# Используя этот шаблон,
# реализуйте игры «Камень, ножницы, бумага» и «Угадай число».
# 
# Правила игры «Камень, ножницы, бумага»:
# программа запрашивает у пользователя строку
# и выводит победил он или проиграл.
# 
# Камень бьёт ножницы, ножницы режут бумагу, бумага кроет камень.
# 
# Правила игры “Угадай число”:
# программа запрашивает у пользователя число до тех пор, пока он его не отгадает.


def guess_the_number():
    print("Приветствую Вас в игре - «Угадай число или умри!»")
    computer_number = random.randint(1, 10)
    human_number = int(input("Угадайте число от 1 до 10: "))
    trying = 1
    while human_number != computer_number:
        trying += 1
        if human_number < computer_number:
            human_number = int(input("Загаданное число больше, угадывайте снова: "))
        else:
            human_number = int(input("Загаданное число меньше, угадывайте снова: "))
    print(f"Число угадано за {trying} попыток!")
    print()
    print("Возвращаю Вас в главное меню")
    print()
    mainMenu()


def rock_paper_scissors():
    print("Приветствую Вас в игре - «Камень, ножницы, бумага!»")

    program_choice = random.randint(1, 3)

    if program_choice == 1:
        program_choice = "камень"
    elif program_choice == 2:
        program_choice = "ножницы"
    else:
        program_choice = "бумага"

    human_choice = input("Выберите: камень, ножницы, бумага?: ")

    if (program_choice == "камень" and human_choice == "бумага") or (
            program_choice == "ножницы" and human_choice == "камень") or (
            program_choice == "бумага" and human_choice == "ножницы"):
        print(f"Вы победили, Ваш соперник выбрал - {program_choice} !")
    elif program_choice == human_choice:
        print("Соперник выбрал то же самое, переигрывайте!")
        print()
        program_choice = random.randint(1, 3)
        rock_paper_scissors()
    else:
        print(f"Это фиаско, Ваш соперник выбрал - {program_choice}, Вы проиграли !")
    print()
    print("Возвращаю Вас в главное меню")
    print()
    mainMenu()

def mainMenu():
    print("Добро пожаловать в главное меню!")
    print("-" * 35)
    print("Здесь вы можете выбрать игру!")
    player_number = int(input('1 - «Камень, ножницы, бумага», 2 - «Угадай число»: '))
    print()
    if player_number == 1:
        rock_paper_scissors()
    else:
        guess_the_number()

mainMenu()